function Image_Data=fHCP_FS_6View_Column(Shape,Map,Color_Function,varargin)
% By Yuncong Ma, Dec. 7, 2018
% Image_Data=fHCP_FS_6View_Column(Shape,Map,Color_Function)
% Provide 6 views for displaying surface based results overlapped on fs_32k
% 2 top views in the top, 4 saggital views on the bottom
% Image_Data is a combined image data for display
% Shape is a struct containg L.faces, L.vertices, R.faces, R.vertices
% Map is column vector with the same vertices in Shape
% Color_Function is [0,0,0,0;1,.8,.8,.8] in default
% could be generated by fColor_Theme
% Optional settings include Figure_Size, Path, Atlas, Atlas_Color, Brain_Color,
% Background_Color, Organization, CameraViewAngle, Material, Light
% Figure_Size is set to [250,1000] in default
% Path is a temporary directory for saving figure
% better to use Path_RAM_Disk
% Atlas should be column vector with the same vertices in Shape
% Atlas_Color is [.1,.1,.1] in default
% Brain_Color should be RGB color row vector
% Brain_Color is [.5,.5,.5] in default
% Background_Color is [0,0,0] in default
% Organization contains ratio of height of top view vs. that of saggital
% view
% Organization is 1.2 in default
% CameraViewAngle is [4,5] in default for top and saggtial views
% respectively
% Material is for function material
% Light is for function camlight, set as [-70,50;70,50] in default
% Figure size could be [250,1000]
% eg.
% fHCP_FS_6View_Column(HCP_FS.Shape,HCP_FS.PS_333.LR.label,fColor_Theme('Atlas',333),{'Atlas',HCP_FS.PS_333.LR.label});

Options.Figure_Size=[250,1000];
Options.Path=[];
Options.Atlas=[];
Options.Atlas_Color=[1 1 1]*0.1;
Options.Brain_Color=[1,1,1]*0.5;
Options.Background_Color=[0,0,0];
Options.Organization=1.2;
Options.CameraViewAngle=[4,5];
Options.Material='default';
Options.Light=[-70,50;70,50];

Options=fOption('fHCP_FS_6View',Options,varargin);
if isempty(Options)
    return;
end

fFigure(1,1,1,'',Options.Figure_Size);
set(gcf,'Visible', 'off');
fSet_Background(Options.Figure_Size,Options.Background_Color);

if isempty(Options.Path)
    Path=fTemp_Path();
else
    Path=fTemp_Path(Options.Path);
end

N_L=size(Shape.L.vertices,1);

if ~isempty(Options.Atlas)
    Options.Atlas_L=Options.Atlas(1:N_L);
    Options.Atlas_R=Options.Atlas(N_L+1:end);
else
    Options.Atlas_L=[];
    Options.Atlas_R=[];
end

Map_L=Map(1:N_L);
Map_R=Map(N_L+1:end);

Ratio=Options.Organization;

H_T=Ratio/(4+Ratio);% height of top view
H_S=1/(4+Ratio);% height of saggital view

% top view
axes('Position',[0 4*H_S 0.5 H_T]);
fHCP_FS_Map(Shape.L,Map_L,Color_Function,{'Atlas',Options.Atlas_L},{'Atlas_Color',Options.Atlas_Color},...
    {'Brain_Color',Options.Brain_Color},{'Background_Color',Options.Background_Color},{'Material',Options.Material},...
    {'Light',Options.Light},{'CameraViewAngle',Options.CameraViewAngle(1)},{'View',[0,90]});

axes('Position',[0.5 4*H_S 0.5 H_T]);
fHCP_FS_Map(Shape.R,Map_R,Color_Function,{'Atlas',Options.Atlas_R},{'Atlas_Color',Options.Atlas_Color},...
    {'Brain_Color',Options.Brain_Color},{'Background_Color',Options.Background_Color},{'Material',Options.Material},...
    {'Light',Options.Light},{'CameraViewAngle',Options.CameraViewAngle(1)},{'View',[0,90]});

% saggital view
axes('Position',[0 3*H_S 1 H_S]);
fHCP_FS_Map(Shape.L,Map_L,Color_Function,{'Atlas',Options.Atlas_L},{'Atlas_Color',Options.Atlas_Color},...
    {'Brain_Color',Options.Brain_Color},{'Background_Color',Options.Background_Color},{'Material',Options.Material},...
    {'Light',Options.Light},{'CameraViewAngle',Options.CameraViewAngle(2)},{'View',[-90 0]});

axes('Position',[0 2*H_S 1 H_S]);
fHCP_FS_Map(Shape.L,Map_L,Color_Function,{'Atlas',Options.Atlas_L},{'Atlas_Color',Options.Atlas_Color},...
    {'Brain_Color',Options.Brain_Color},{'Background_Color',Options.Background_Color},{'Material',Options.Material},...
    {'Light',Options.Light},{'CameraViewAngle',Options.CameraViewAngle(2)},{'View',[90 0]});

axes('Position',[0 H_S 1 H_S]);
fHCP_FS_Map(Shape.R,Map_R,Color_Function,{'Atlas',Options.Atlas_R},{'Atlas_Color',Options.Atlas_Color},...
    {'Brain_Color',Options.Brain_Color},{'Background_Color',Options.Background_Color},{'Material',Options.Material},...
    {'Light',Options.Light},{'CameraViewAngle',Options.CameraViewAngle(2)},{'View',[90 0]});

axes('Position',[0 0 1 H_S]);
fHCP_FS_Map(Shape.R,Map_R,Color_Function,{'Atlas',Options.Atlas_R},{'Atlas_Color',Options.Atlas_Color},...
    {'Brain_Color',Options.Brain_Color},{'Background_Color',Options.Background_Color},{'Material',Options.Material},...
    {'Light',Options.Light},{'CameraViewAngle',Options.CameraViewAngle(2)},{'View',[-90 0]});

saveas(gcf,fullfile(Path,'Image.tif'));
close(gcf);

Image_Data=imread(fullfile(Path,'Image.tif'));

rmdir(Path,'s');
end